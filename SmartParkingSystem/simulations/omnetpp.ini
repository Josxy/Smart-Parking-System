[General]
network = smartparkingsystem.SmartParkingNetwork
sim-time-limit = 7200s
seed-set = ${repetition}

# Parking Lot Parameters
**.parkingLot.numSlots = 20
**.parkingLot.arrivalRate = 0.05
**.parkingLot.avgParkingDuration = 1800.0
**.parkingLot.simulationTime = 7200.0
**.parkingLot.sensorMalfunctionRate = 0.001
**.parkingLot.sensorRepairTime = 300.0

# Queue Parameters
**.queue.maxQueueSize = 50

# Visual Settings
**.queue.displayStrings = "i=block/queue;is=l"
**.controller.displayStrings = "i=block/control;is=l"
**.slot[*].displayStrings = "i=misc/square;is=l"

# Output configuration
output-vector-file = ${resultdir}/${configname}-${repetition}.vec
output-scalar-file = ${resultdir}/${configname}-${repetition}.sca

# Multiple runs for statistical confidence
repeat = 10

[Config SmallParking]
description = "Small parking lot with low demand"
**.parkingLot.numSlots = 10
**.parkingLot.arrivalRate = 0.02
**.queue.maxQueueSize = 20

[Config LargeParking]
description = "Large parking lot with high demand"
**.parkingLot.numSlots = 50
**.parkingLot.arrivalRate = 0.08
**.queue.maxQueueSize = 100

[Config HighDemand]
description = "High demand scenario with short parking times"
**.parkingLot.numSlots = 20
**.parkingLot.arrivalRate = 0.1
**.parkingLot.avgParkingDuration = 1200.0
**.queue.maxQueueSize = 75

[Config SensorProblems]
description = "Scenario with frequent sensor malfunctions"
**.parkingLot.numSlots = 15
**.parkingLot.arrivalRate = 0.06
**.parkingLot.sensorMalfunctionRate = 0.01
**.parkingLot.sensorRepairTime = 600.0